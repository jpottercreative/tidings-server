c
render json: exception.message, status: :forbidden
exception.full_message
exception.full_messages
exception.message.full_messages
exception.message.text
exception.message.statusText
exception.message
exception
c
exception.message
exception.message.ERROR
exception.message.error
exception.message
exception.messages
exception.ERROR
exception.error
exception
exception.ERROR
exception.error
exception
c
url_for(@block.image_attachment)
@block.image_attachment
@block
block
c
params
c
params
c
params
gallery
c
new_gallery
new_gallery = Gallery.create(user_id: user.id)
new_gallery
c
featured_image
c
featured_image
user
use
c
params
gallery_params
r
body
params
gallery
params
c
galleries.first
exit
galleries
exit
new_gallery
gallery_params
params
exit
params
featured_image
new_gallery
attach_gal
c
blocks
exit
blocks
exit
exi
blocks
block_map
exit
imagey
exit
blocks.map { |b| url_for(b.image)}
url_for(blocks.first)
url_for(blocks.first.image)
blocks.first.image.attached?
blocks.first.image_attachment
blocks
blocks.each do |b| puts b.image_attachment end
blocks.each do |b| puts b.image end
blocks.each do |b| puts b end
blocks.each do |b| puts b
block
blocks.each do { |block| block.image_attachment}
block_pics
blocks
gallery
exit
c
blocks.first
blocks.all
blocks
gallery
gallery.blocks.image_attachment?
gallery.blocks.image_attachment
gallery.blocks.image_attachment.url
gallery
params
blocks.first.image.attached?
blocks.first.image
blocks.all.images
blocks.all.name
blocks.all.title
blocks
block
block_pics
c
url_for(gallery.blocks.first.image)
gallery.blocks.first.image
gallery.blocks.first.image.attached?
gallery.blocks.first
gallery
c
gallery.blocks.first.image.attached?
gallery.blocks.first.image?
gallery.blocks.first.image_attachment?
gallery.blocks.first.image_attachment
gallery.blocks.first
gallery.blocks.image_attachment
gallery.blocks
gallery
gallery = Gallery.find_by!(id: params[:id])
gallery
gallery.blocks
block
block.image_attachment
c
rails_blob_path(block.image)
block.image.attached?
block
c
gallery.blocks.last
gallery.blocks.create( block_type: "text", text: "hellp" )
gallery.blocks.last
gallery.blocks.last.valid?
gallery.blocks.last
gallery.block.last
gallery.blocks.create( block_params )
params
gallery.blocks.create( params )
gallery.blocks.create
gallery.blocks.new
gallery.block
gallery.blocks
params
gallery
exit
params
c
gallery
Gallery.find_by!(id: params[:id])
c
user.galleries
user = current_user
user
current_user
c
Gallery.find_by!(id: params[:id])
gallery
exit
current_user.id
current_user
c
params
c
params
c
self.resource = warden.authenticate!
self.resource
request.env['warden-jwt_auth.token']
current_user.token
current_user
current_token
c
params
c
params
current_user
params
c
User.first.avatar
User.find(1)
params
c
current_user
params
c
current_user.avatar.attach
current_user
curren_user
c
user
user = current_user
user
c
current_user.avatar.blob
current_user.avatar
u.avatar_blob
u.avatar_attachment
u.avatar_blog
u = User.first
current_user
exit
c
u.avatar_blob
u.avatar_attachment
rails_blob_path(u.avatar_attachment)
u.avatar_attachment
u.avatar_attached
u
u = User.first
User.all
Users.all
c
exit
current_user
